name: Build and deploy landing page

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/deploy-landing-page.yml'
      - 'apps/landing-page/**'
      - 'packages/assets/**'
      - 'i18n-translations/common/**'
      - 'i18n-translations/landing-page/**'
      - 'packages/lib/**'
      - 'packages/tailwind-config/**'
      - 'packages/ui/**'
      - 'package.json'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Determinate build version
        id: build
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Build
        run: yarn run landing-page:build
        env:
          NEXT_PUBLIC_BUILD_VERSION: '${{ steps.build.outputs.sha }}'

      - name: Upload generated build files
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: apps/landing-page/build/
          include-hidden-files: true
          retention-days: 1

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download generated build files
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}/docker/landing-page/build

      - name: Set up builder
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/landing-page/Dockerfile.pipeline
          push: true
          tags: milosz08/jwizard-landing-page:latest

      - name: Logout from Docker Hub
        run: docker logout

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout tools repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/jwizard-tools
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download generated build files
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: build

      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Grand permissions
        run: chmod +x exec/run-with-config

      - name: Run packages grabber
        run: exec/run-with-config remote_invoker \
          "${{ secrets.CONFIG_FILE_CONTENT }}" \
          --name landing-page  \
          --inputDir ${{ github.workspace }}/build
        env:
          JWIZARD_SSH_HOST: ${{ secrets.SSH_HOST }}
          JWIZARD_SSH_PORT: ${{ secrets.SSH_PORT }}
          JWIZARD_SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          JWIZARD_SSH_KEY: ${{ secrets.SSH_KEY }}
          JWIZARD_SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          JWIZARD_SSH_OUTPUT_PATH_PREFIX: ${{ secrets.SSH_OUTPUT_PATH_PREFIX }}
          JWIZARD_APP_CONFIG_FILE_CONTENT: ${{ secrets.APP_CONFIG_FILE_CONTENT }}
