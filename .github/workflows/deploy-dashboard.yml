name: Build and deploy dashboard

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/deploy-dashboard.yml'
      - 'apps/dashboard/**'
      - 'packages/assets/**'
      - 'i18n-translations/common/**'
      - 'i18n-translations/dashboard/**'
      - 'packages/lib/**'
      - 'packages/tailwind-config/**'
      - 'packages/ui/**'
      - 'package.json'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Determinate build version
        id: build
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Build
        run: yarn run dashboard:build
        env:
          WEBPACK_BUILD_VERSION: '${{ steps.build.outputs.sha }}'

      - name: Upload generated dist files
        uses: actions/upload-artifact@v4
        with:
          name: dist-output
          path: apps/dashboard/dist/
          include-hidden-files: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      SERVER_OUTPUT: "/var/www/jwizard-dashboard"

    steps:
      - name: Download generated dist files
        uses: actions/download-artifact@v4
        with:
          name: dist-output
          path: dist

      - name: Move files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "dist/*"
          target: ${{ env.SERVER_OUTPUT }}
          rm: true
          strip_components: 1
